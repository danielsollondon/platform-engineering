apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: base-stateful-app
spec:
  environment:
    environmentConfigs:
    - type: Reference
      ref:
        name: base-app-config-team01
  resources:
    - name: crossplane-resourcegroup
      base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ResourceGroup
        spec:
          forProvider:
            location: Central US
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.location"
          toFieldPath: "spec.forProvider.location"
          transforms:
            - type: map
              map: 
                EU: "Sweden Central"
                US: "Central US"
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/external-name"]
          toFieldPath: metadata.annotations["crossplane.io/rgName"]
          policy:
            fromFieldPath: Required

    - name: crossplane-workload-uai
      base:
        apiVersion: managedidentity.azure.upbound.io/v1beta1
        kind: UserAssignedIdentity
        spec:
          forProvider:
            location: Central US
            resourceGroupNameSelector:
                matchControllerRef: true
            name: baseapp
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.location"
          toFieldPath: "spec.forProvider.location"
          transforms:
            - type: map
              map: 
                EU: "Sweden Central"
                US: "Central US"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.tenantId
          toFieldPath: metadata.annotations["crossplane.io/tenantId"]
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.principalId
          toFieldPath: metadata.annotations["crossplane.io/uaiprincipalId"]
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.clientId
          toFieldPath: metadata.annotations["crossplane.io/clientId"]
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
            strategy: string
            string:
              fmt: "%s-uai"
          toFieldPath: "spec.forProvider.name"

    - name: crossplane-get-cluster-details
      base:
        apiVersion: containerservice.azure.upbound.io/v1beta1
        kind: KubernetesCluster
        metadata:
          annotations:
            crossplane.io/external-name: xxxx
        spec:
          managementPolicies: ["Observe"]
          forProvider:
            resourceGroupName: xxxx
      patches:
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.oidcIssuerUrl
          toFieldPath: metadata.annotations["crossplane.io/clu-oidcIssuerUrl"]
        - type: FromEnvironmentFieldPath
          fromFieldPath: clustername
          toFieldPath: metadata.annotations["crossplane.io/external-name"]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/external-name"]
          toFieldPath: metadata.annotations["crossplane.io/clustername"]
          policy:
            fromFieldPath: Required

        - type: FromEnvironmentFieldPath
          fromFieldPath: clusterrgname
          toFieldPath: spec.forProvider.resourceGroupName

      
  

    - name: crossplane-uai-fed
      base:
        apiVersion: managedidentity.azure.upbound.io/v1beta1
        kind: FederatedIdentityCredential
        spec:
          forProvider:
            audience:
              - api://AzureADTokenExchange
            issuer: https://00000000-0000-0000-0000-0000000000
            parentIdSelector: 
                  matchControllerRef: true
            location: Central US
            resourceGroupName: xxxx
            subject: system:serviceaccount:cp-app3:cp-app10
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.appname
              - fromFieldPath: spec.appname
            strategy: string
            string:
              fmt: "system:serviceaccount:%s:%s"
          toFieldPath: "spec.forProvider.subject"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/clu-oidcIssuerUrl"]
          toFieldPath: spec.forProvider.issuer
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/rgName"]
          toFieldPath: spec.forProvider.resourceGroupName
          policy:
            fromFieldPath: Required

    - name: crossplane-kv
      base:
        apiVersion: keyvault.azure.upbound.io/v1beta1
        kind: Vault
        spec:
          forProvider:
            enabledForDiskEncryption: true
            enableRbacAuthorization: true
            enabledForTemplateDeployment: true
            location: Central US
            purgeProtectionEnabled: false
            skuName: standard
            softDeleteRetentionDays: 7
            tenantId: 00000000-0000-0000-0000-0000000000
            resourceGroupNameSelector:
                matchControllerRef: true
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.location"
          toFieldPath: "spec.forProvider.location"
          transforms:
            - type: map
              map: 
                EU: "Sweden Central"
                US: "Central US"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/tenantId"]
          toFieldPath: "spec.forProvider.tenantId"
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/external-name"]
          toFieldPath: metadata.annotations["crossplane.io/kvName"]
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: metadata.annotations["crossplane.io/kvResId"]

    - name: crossplane-get-operating-uai-prinID
      base:
        apiVersion: managedidentity.azure.upbound.io/v1beta1
        kind: UserAssignedIdentity
        metadata:
          annotations:
            crossplane.io/external-name: xxx
        spec:
          managementPolicies: ["Observe"]
          forProvider:
            resourceGroupName: xxx
      patches:
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.principalId
          toFieldPath: metadata.annotations["crossplane.io/principalId"]
          policy:
            fromFieldPath: Required
        - type: FromEnvironmentFieldPath
          fromFieldPath: kblaksuaiid
          toFieldPath: metadata.annotations["crossplane.io/external-name"]
        - type: FromEnvironmentFieldPath
          fromFieldPath: kblaksuaiid
          toFieldPath: spec.forProvider.resourceGroupName

    - name: crossplane-role-assign-pri
      base:
        apiVersion: authorization.azure.upbound.io/v1beta1
        kind: RoleAssignment
        spec:
          forProvider:
            roleDefinitionName: Key Vault Secrets Officer
            principalId: 00000000-0000-0000-0000-0000000000
            scope: xxx
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/principalId"]
          toFieldPath: "spec.forProvider.principalId"
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/kvResId"]
          toFieldPath: spec.forProvider.scope
          policy:
            fromFieldPath: Required
    

    - name: crossplane-db-secret
      base:
        apiVersion: keyvault.azure.upbound.io/v1beta1
        kind: Secret
        spec:
          forProvider:
            name: db-conn-string
            keyVaultIdSelector:
              matchControllerRef: true
            valueSecretRef:
              key: db-conn-string
              name: db-conn-string
              namespace: upbound-system

    - name: crossplane-role-assign-reader
      base:
        apiVersion: authorization.azure.upbound.io/v1beta1
        kind: RoleAssignment
        spec:
          forProvider:
            roleDefinitionName: Key Vault Secrets User
            principalId: 00000000-0000-0000-0000-0000000000
            scope: xxx
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/kvResId"]
          toFieldPath: spec.forProvider.scope
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/uaiprincipalId"]
          toFieldPath: "spec.forProvider.principalId"
          policy:
            fromFieldPath: Required



    - name: create-argo-app
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          name: testapp1
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                name: app02
                namespace: argocd
                finalizers:
                - resources-finalizer.argocd.argoproj.io
              spec:
                project: default
                source:    
                  repoURL: repoUrl
                  targetRevision: HEAD
                  path: repoPath
                  helm:
                    valuesObject:
                      namespace:
                        name: mynamespace
                      serviceaccount:
                        clientId: myclientid
                      scrprovclass:
                        keyVaultname: mykeyvaultname
                      scrprovclass:
                        tenantId: mytenantid
                syncPolicy:
                    automated: {}
                destination:
                    namespace: argocd
                    server: https://kubernetes.default.svc
          providerConfigRef: 
            name: xxxx-prov-conf-object

      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.annotations["crossplane.io/clustername"]
            strategy: string
            string:
              fmt: "%s-prov-conf-object"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Required

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.appname"
          toFieldPath: "spec.forProvider.manifest.spec.source.helm.valuesObject.namespace.name"

        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/clientId"]
          toFieldPath: "spec.forProvider.manifest.spec.source.helm.valuesObject.serviceaccount.clientId"

        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/kvName"]
          toFieldPath: "spec.forProvider.manifest.spec.source.helm.valuesObject.scrprovclass.keyVaultname"

        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations["crossplane.io/tenantId"]
          toFieldPath: "spec.forProvider.manifest.spec.source.helm.valuesObject.scrprovclass.tenantId"
        
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.repourl"
          toFieldPath: "spec.forProvider.manifest.spec.source.repoURL"
        
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.repopath"
          toFieldPath: "spec.forProvider.manifest.spec.source.path"
        
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.appname"
          toFieldPath: "spec.forProvider.manifest.metadata.name"



  compositeTypeRef:
    apiVersion: compute.example.com/v1alpha1
    kind: base-stateful-app